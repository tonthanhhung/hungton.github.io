{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/bio.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["BlogPostTemplate","render","post","this","props","data","mdx","siteTitle","site","siteMetadata","title","pageContext","previous","next","location","frontmatter","description","excerpt","style","scale","display","marginBottom","rhythm","marginTop","date","body","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","React","Component","pageQuery","Container","styled","div","Bio","useBioQuery","author","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","MDXRenderer","require","module","useMDXComponents","useMDXScope","scope","components","children","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn"],"mappings":"85BASMA,E,gLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,IACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAF7C,EAGoBP,KAAKC,MAAMO,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KAElB,OACE,kBAAC,IAAD,CAAQC,SAAUX,KAAKC,MAAMU,SAAUJ,MAAOH,GAC5C,kBAAC,IAAD,CACEG,MAAOR,EAAKa,YAAYL,MACxBM,YAAad,EAAKa,YAAYC,aAAed,EAAKe,UAEpD,4BAAKf,EAAKa,YAAYL,OACtB,uBACEQ,MAAK,KACAC,aAAM,IADN,CAEHC,QAAQ,QACRC,aAAcC,YAAO,GACrBC,UAAWD,aAAQ,MAGpBpB,EAAKa,YAAYS,MAEpB,kBAAC,cAAD,KAActB,EAAKuB,MACnB,wBACEP,MAAO,CACLG,aAAcC,YAAO,MAGzB,kBAAC,IAAD,MAEA,wBACEJ,MAAO,CACLE,QAAQ,OACRM,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGjB,GACC,kBAAC,OAAD,CAAMkB,GAAE,OAASlB,EAASmB,OAAOC,KAAQC,IAAI,QAA7C,KACKrB,EAASG,YAAYL,QAI9B,4BACGG,GACC,kBAAC,OAAD,CAAMiB,GAAE,OAASjB,EAAKkB,OAAOC,KAAQC,IAAI,QACtCpB,EAAKE,YAAYL,MADpB,U,GAjDiBwB,IAAMC,WA4DtBnC,YAER,IAAMoC,EAAS,c,uGCnCtB,IAAMC,EAAYC,IAAOC,IAAV,qEAAGD,CAAH,mBAIAE,IA1Bf,WACE,IAAMnC,EAAOoC,cACLC,EAAWrC,EAAKG,KAAKC,aAArBiC,OACR,OACE,kBAACL,EAAD,KACE,kBAAC,IAAD,CACEM,MAAOtC,EAAKuC,OAAOC,gBAAgBF,MACnCG,IAAKJ,EACLxB,MAAO,CACL6B,YAAazB,YAAO,IACpBD,aAAc,EACd2B,SAAU,GACVC,aAAa,QAEfC,SAAU,CACRD,aAAa,Y,oBCvBvB,IAAME,EAAcC,EAApB,KAEAC,UAAiB,CACfF,YAAaA,I,wqDCTf,IAAMjB,EAAQkB,EAAd,G,EACkCA,EAAQ,KAAlCE,E,EAAAA,iBAAkBhD,E,EAAAA,IAClBiD,EAAgBH,EAAQ,KAAxBG,YAERF,UAAiB,SAAqB,GAKlC,IAJFG,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGtD,E,oIACF,sCACKuD,EAAgBL,EAAtB,GACMM,EAAWL,EAFhB,GAKKM,EAAM3B,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAM4B,EAAS,GAGb5B,MAHa,EAIb5B,OAJF,GAQMyD,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACT,EAlBJ,IAoBA,OAAOxB,EAAA,mBAA2BuB,WAAYE,GAA9C","file":"component---src-templates-blog-post-js-500dcde09fdd03a89573.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.mdx\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <MDXRenderer>{post.body}</MDXRenderer>\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={`blog${previous.fields.slug}`} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={`blog${next.fields.slug}`} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      body\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport Image from \"gatsby-image\"\nimport styled from \"styled-components\"\n\nimport { rhythm } from \"../utils/typography\"\nimport { useBioQuery } from \"../graphql-hook/useBioQuery\"\n\nfunction Bio() {\n  const data = useBioQuery()\n  const { author } = data.site.siteMetadata\n  return (\n    <Container>\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  display: flex;\n`\n\nexport default Bio\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}